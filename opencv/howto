
load_classifiers
face_eye_classifiers

To read the training data - CascadeClassifier ("name of the xml file")



detect_faces - will return how many "points" it detected from the library in this new image.

If you get the isempty() that is because the xml file did not get loaded right !
face_cascade = cv.CascadeClassifier('haarcascade_frontalface_default.xml')

1. Dataset Generator ( facialrecognition.py - waits with a photo - click ok.  saves in dataSet/.jpg and so on. )
or ( python3 facialrecognitionIPWebcam.py )

this creates 5 or more samples in the dataSet folder.
Click 'q' and it takes another photo and saves it.

2. Trainer ( trainer.py) -> produces the trainer.yml in the current folder.
https://thecodacus.com/face-recognition-opencv-train-recognizer/
Look at trainer.py -> trainer.xml in the curret directory

This is the HAAR classifier that "could tell OpenCV to recognize something of our choice, "

http://coding-robin.de/2013/07/22/train-your-own-opencv-haar-classifier.html


3. detector ( this is the final piece ) 
https://thecodacus.com/face-recognition-loading-recognizer/#.WtmI49NubBI
https://thecodacus.com/face-recognition-loading-recognizer/#.WtmuotNubBI


	 
